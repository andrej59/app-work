package ru.ajana.work.common.sorted;

/**
 * 1. Реализация пузырьковой сортировки.
 *
 * <p>Представим себе цепочку случайно расставленных чисел, для которых будут выполняться следующие
 * шаги, начиная с начала цепочки:
 *
 * <p>сравнить два числа; если число слева больше, то поменять их местами; перейти на одну позицию
 * вправо.
 *
 * <p>После прохождения по всей цепочке с выполнением данных шагов мы обнаружим, что наибольшее
 * число оказалось в конце нашего ряда чисел.
 *
 * <p>Далее выполняется точно такой же проход по цепочке с выполнением вышеописанных шагов. Но в
 * этот раз мы не будем включать последний элемент списка, так как он самый большой и уже стоит на
 * последнем месте, как и должен.
 * <p>
 *
 *  Сложность: O(N²)
 */
public class BubbleSortSolution {
  public static void main(String[] args) {
    int[] testArr = new int[] {6, 3, 8, 2, 6, 9, 4, 11, 1};
    bubbleSort(testArr);
    for (int i : testArr) {
      System.out.println(i);
    }
  }

  public static void bubbleSort(int[] array) {
    for (int i = array.length - 1; i >= 1; i--) {
      for (int j = 0; j < i; j++) { //
        if (array[j] > array[j + 1]) {
          int temp = array[j];
          array[j] = array[j + 1];
          array[j + 1] = temp;
        }
      }
    }
  }
}
