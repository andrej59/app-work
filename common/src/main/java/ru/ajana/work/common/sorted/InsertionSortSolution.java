package ru.ajana.work.common.sorted;

/**
 * 3. Сортировка методом вставки.
 *
 * <p>Данный алгоритм заключается в выставлении маркера, слева от которого элементы будут уже
 * частично отсортированы между собой. На каждом шаге алгоритма будет выбираться один из элементов и
 * помещаться на нужную позицию в уже отсортированной последовательности. Таким образом,
 * отсортированная часть будет увеличиваться до тех пор, пока не будут просмотрены все элементы.
 *
 * Сложность: O(N²) - в двое быстрее чем пузырьковая и немного чем методом выбора.
 */
public class InsertionSortSolution {
  public static void main(String[] args) {
    int[] testArr = new int[] {6, 3, 8, 8, 6, 9, 4, 11, 1};
    insertionSort(testArr);
    for (int i : testArr) {
      System.out.println(i);
    }
  }

  public static void insertionSort(int[] array) {

    for (int i = 1; i < array.length; i++) { // i - разделяющий маркер
      int temp = array[i]; // делаем копию помеченного элемента
      int j = i;
      while (j > 0 && array[j - 1] >= temp) { // пока не будет найден меньший элемент
        array[j] = array[j - 1]; // сдвигаем элементы вправо
        --j;
      }
      array[j] = temp; // вставляем отмеченный элемент, в положеное ему место
    }
  }
}
